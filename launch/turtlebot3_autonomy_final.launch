<launch>

  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>

  <!-- Set names for robots -->
  <arg name="tb3" default="tb3"/>
  <arg name="tb3_1" default="tb3_leader"/>

  <!-- Init pose -->
  <arg name="x_pos" default="-0.2"/>
  <arg name="y_pos" default="1.6"/>
  <arg name="z_pos" default="0"/>
  <arg name="yaw_pos" default="3.14"/>
  <arg name="tb3_1_x_pos" default="1"/>
  <arg name="tb3_1_y_pos" default="0.5"/>
  <arg name="tb3_1_z_pos" default="0"/>
  <arg name="tb3_1_yaw_pos" default="1.57"/>

  <!-- PID controller parameters -->
  <arg name="Kp" default="0.2"/>
  <arg name="Ki" default="0.008"/>
  <arg name="Kd" default="0.2" />

  <!-- Line color -->
  <arg name="lower_HSV" default="[20, 100, 100]" />
  <arg name="upper_HSV" default="[50, 255, 255]" />

  <!-- Line center shift -->
  <arg name="line_center_shift" default="50" />

  <!-- Arguments for tag detection nodes -->
  <arg name="node_namespace" default="apriltag_ros_continuous_node" />
  <arg name="camera_name" default="/tb3/camera/rgb" />
  <arg name="camera_frame" default="camera" />
  <arg name="image_topic" default="image_raw" />
  <arg name="launch_prefix" default="" /> <!-- set to value="gdbserver localhost:10000" for remote debugging -->
  
  <!-- Set parameters for tag detection-->
  <rosparam command="load" file="$(find aue_finals)/for_apriltag_ros/config/settings.yaml" ns="$(arg node_namespace)" />
  <rosparam command="load" file="$(find aue_finals)/for_apriltag_ros/config/tags.yaml" ns="$(arg node_namespace)" />

  <!-- Default linear speed -->
  <arg name="linear_x" default="0.05"/>

  <!-- Load world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find aue_finals)/worlds/turtlebot3_final.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Spawn target bot -->
  <group ns = "$(arg tb3)">
    <!-- Load Burger description -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg tb3)" />
    </node>

    <!-- Load Gazebo -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg tb3) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y $(arg yaw_pos) -param robot_description" />
  </group>

  <!-- Spawn Leader bot -->
  <group ns = "$(arg tb3_1)">
    <!-- Load Burger description -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find aue_finals)/urdf/turtlebot3_$(arg model)_leader.urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg tb3_1)" />
    </node>
 
    <!-- Load Gazebo -->   
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg tb3_1) -x $(arg tb3_1_x_pos) -y $(arg tb3_1_y_pos) -z $(arg tb3_1_z_pos) -Y $(arg tb3_1_yaw_pos) -param robot_description" />
  </group>

  <!--<include file="$(find turtlebot3_bringup)/launch/includes/description.launch.xml">
    <arg name="model" value="$(arg model)" />
  </include>-->

  <!-- Obstacle Avoidance node -->
  <node pkg="aue_finals" type="obstacle_avoidance.py" name="obstacle_avoidance">
    <param name="linear_x" value="$(arg linear_x)" />
  </node>

  <!-- Line Detection node -->
  <node pkg="aue_finals" type="line_detection.py" name="line_detection">
    <param name="Kp" value="$(arg Kp)"/>
    <param name="Ki" value="$(arg Ki)"/>
    <param name="Kd" value="$(arg Kd)" />
    <param name="lower_HSV" value="$(arg lower_HSV)" />
    <param name="upper_HSV" value="$(arg upper_HSV)" />
    <param name="line_center_shift" value="$(arg line_center_shift)" />
  </node>

  <!-- Stop sign detection node -->
  <node pkg="aue_finals" type="stop_sign_detection_cv.py" name="stop_sign_detection" />

  <!-- april_ros tag detection node -->
  <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="$(arg node_namespace)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" >
    <!-- Remap topics from those used in code to those on the ROS network -->
    <remap from="image_rect" to="$(arg camera_name)/$(arg image_topic)" />
    <remap from="camera_info" to="$(arg camera_name)/camera_info" />

    <param name="camera_frame" type="str" value="$(arg camera_frame)" />
    <param name="publish_tag_detections_image" type="bool" value="true" />      <!-- default: false -->
  </node>

  <!-- April tag follower node -->
  <node pkg="aue_finals" type="april_tag_tracking_sim.py" name="april_tag_tracking_sim">
    <param name="Kp" value="$(arg Kp)"/>
    <param name="Ki" value="$(arg Ki)"/>
    <param name="Kd" value="$(arg Kd)" />
  </node>

  <!-- Main controller -->
  <node pkg="aue_finals" type="main_controller.py" name="main_controller">
    <param name="linear_x" value="$(arg linear_x)" />
  </node>

</launch>
